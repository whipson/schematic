expect_false(is_incrementing(c(4, 3, 0)))
expect_true(is_incrementing(1, NA, NA, 3))
expect_true(is_incrementing(1, 3, NA, NA))
sort(c(1, 3, NA))
expect_false(is_incrementing(c(NA, 3, 5)))
devtools::load_all(".")
devtools::document()
expect_true(nullable(c(1, NA, 4)))
expect_true(is_incrementing(nullable(c(1, NA, 4))))
nullable(is_incrementing)
expect_true(nullable(is_incrementing)(c(1, NA, 3)))
devtools::load_all(".")
x <- c(1, NA, 3)
is_incrementing(x)
is_incrementing_null <- nullable(is_incrementing)
is_incrementing_null(x)
devtools::document()
df <- data.frame()
class(df)
renv::install("tibble")
class(tibble::tibble())
inherits(tibble::tibble(), "data.frame")
devtools::load_all(".")
test_that("is_all_distinct", {
expect_true(is_all_distinct(c(1:5)))
expect_false(is_all_distinct(c(1, 1, 2)))
})
test_that("is_all_distinct", {
expect_true(is_all_distinct(c(1:5)))
expect_false(is_all_distinct(c(1, 1, 2)))
expect_true(nullable(is_all_distinct)(c(1, 3, NA, NA)))
})
devtools::document()
library(schematic)
test_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA)
)
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F"))
)
test_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA)
)
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
test_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA),
q_1 = c(TRUE, FALSE, FALSE, FALSE, TRUE),
q_2 = c(FALSE, FALSE, TRUE, TRUE, TRUE),
q_3 = c(TRUE, TRUE, TRUE, TRUE, FALSE)
)
survey_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA),
q_1 = c(TRUE, FALSE, FALSE, FALSE, TRUE),
q_2 = c(FALSE, FALSE, TRUE, TRUE, TRUE),
q_3 = c(TRUE, TRUE, TRUE, TRUE, FALSE)
)
check_schema(
data = survey_data,
schema = my_schema
)
survey_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA),
q_1 = c(TRUE, FALSE, FALSE, FALSE, TRUE),
q_2 = c(FALSE, FALSE, TRUE, TRUE, TRUE),
q_3 = c(TRUE, TRUE, TRUE, TRUE, FALSE)
)
#| error: true
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
check_schema(
data = survey_data,
schema = my_schema
)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
#| error: true
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
check_schema(
data = survey_data,
schema = my_schema
)
survey_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA),
q_1 = c(TRUE, FALSE, FALSE, FALSE, TRUE),
q_2 = c(FALSE, FALSE, TRUE, TRUE, TRUE),
q_3 = c(TRUE, TRUE, TRUE, TRUE, FALSE)
)
#| error: true
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
check_schema(
data = survey_data,
schema = my_schema
)
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
age ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
survey_data <- data.frame(
id = c(1:3, NA, 5),
name = c("Emmett", "Billy", "Sally", "Woolley", "Duchess"),
age = c(19.2, 10, 22.5, 19, 19),
sex = c("M", "M", "F", "M", NA),
q_1 = c(TRUE, FALSE, FALSE, FALSE, TRUE),
q_2 = c(FALSE, FALSE, TRUE, TRUE, TRUE),
q_3 = c(TRUE, TRUE, TRUE, TRUE, FALSE)
)
my_schema <- schema(
id ~ is_incrementing,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
NA %% 1
my_schema <- schema(
id ~ is_incrementing,
id ~ is_all_distinct,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
devtools::load_all(".")
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
my_schema <- schema(
id ~ is_incrementing,
id ~ is_all_distinct,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical,
final_score ~ is.numeric
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
test_that("check_schema works on non-definite selector", {
test_that("check_schema works on non-definite selector", {
df <- mtcars
sch <- schema(
starts_with("blahblah") ~ as.character
)
expect_invisible(check_schema(df, sch))
})
my_schema <- schema(
id ~ is_incrementing,
id ~ is_all_distinct,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical,
final_score ~ is.numeric
)
my_schema <- schema(
id ~ is_incrementing,
id ~ is_all_distinct,
c(name, sex) ~ is.character,
c(id, age) ~ is_whole_number,
education ~ is.factor,
sex ~ function(x) all(x %in% c("M", "F")),
starts_with("q_") ~ is.logical,
final_score ~ is.numeric
)
#| error: true
check_schema(
data = survey_data,
schema = my_schema
)
#| error: true
my_helpful_schema <- schema(
`values are increasing` = id ~ is_incrementing,
`values are all distinct` = id ~ is_all_distinct,
`is a string` = c(name, sex) ~ is.character,
`is a whole number (no decimals)` = c(id, age) ~ is_whole_number,
education ~ is.factor,
`has only entries 'F' or 'M'` = sex ~ function(x) all(x %in% c("M", "F")),
`includes only TRUE or FALSE` = starts_with("q_") ~ is.logical,
`is a number` = final_score ~ is.numeric
)
check_schema(
data = survey_data,
schema = my_helpful_schema
)
#| error: true
my_helpful_schema <- schema(
"values are increasing" = id ~ is_incrementing,
`values are all distinct` = id ~ is_all_distinct,
`is a string` = c(name, sex) ~ is.character,
`is a whole number (no decimals)` = c(id, age) ~ is_whole_number,
education ~ is.factor,
`has only entries 'F' or 'M'` = sex ~ function(x) all(x %in% c("M", "F")),
`includes only TRUE or FALSE` = starts_with("q_") ~ is.logical,
`is a number` = final_score ~ is.numeric
)
check_schema(
data = survey_data,
schema = my_helpful_schema
)
#| error: true
my_helpful_schema <- schema(
"values are increasing" = id ~ is_incrementing,
"values are all distinct" = id ~ is_all_distinct,
"is a string" = c(name, sex) ~ is.character,
"is a whole number (no decimals)" = c(id, age) ~ is_whole_number,
education ~ is.factor,
"has only entries 'F' or 'M'" = sex ~ function(x) all(x %in% c("M", "F")),
"includes only TRUE or FALSE" = starts_with("q_") ~ is.logical,
"is a number" = final_score ~ is.numeric
)
check_schema(
data = survey_data,
schema = my_helpful_schema
)
#| error: true
my_helpful_schema <- schema(
"values are increasing" = id ~ is_incrementing,
"values are all distinct" = id ~ is_all_distinct,
"is a string" = c(name, sex) ~ is.character,
"is a whole number (no decimals)" = c(id, age) ~ is_whole_number,
"has only entries 'F' or 'M'" = sex ~ function(x) all(x %in% c("M", "F")),
"includes only TRUE or FALSE" = starts_with("q_") ~ is.logical,
"is a number" = final_score ~ is.numeric
)
check_schema(
data = survey_data,
schema = my_helpful_schema
)
devtools::document()
is_whole_number(Inf)
test_that("infinitable", {
x <- c(1, Inf, 3)
is_incrementing_null <- infinitable(is_incrementing)
expect_true(is_incrementing_null(x))
})
devtools::load_all(".")
test_that("infinitable", {
x <- c(1, Inf, 3)
is_incrementing_null <- infinitable(is_incrementing)
expect_true(is_incrementing_null(x))
})
devtools::load_all(".")
devtools::check()
pkgdown::preview_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::check()
devtools::check()
renv::snapshot()
renv::snapshot()
devtools::check()
devtools::check()
devtools::check()
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
rules
dots
devtools::load_all(".")
devtools::load_all(".")
?withCallingHandlers
devtools::load_all(".")
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
devtools::load_all(".")
schema(
cyl
)
sch <- schema(
cyl ~ stop()
)
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
devtools::load_all(".")
df <- mtcars
sch <- schema(
c(cyl, am) ~ is.character
)
check_schema(df, sch)
usethis::use_news_md()
devtools::load_all(".")
df <- iris
sch <- schema(
tidyselect::starts_with("Sepal") ~ is.numeric
)
df <- mtcars
sch <- schema(
c(cyl, am) ~ is.character
)
check_schema(df, sch)
?cli::cli_abort
devtools::check()
devtools::check()
devtools::check()
renv::restore()
renv::snapshot()
renv::restore()
renv::status()
install.packages("usethis")
usethis::use_cran_comments()
install.packages("devtools")
remotes::install_version("Rcpp", "1.0.14")
install.packages("devtools")
devtools::check()
renv::install("quarto")
devtools::check()
devtools::submit_cran()
renv::install("httr")
devtools::submit_cran()
devtools::check()
devtools::check()
devtools::submit_cran()
install.packages("schematic")
