devtools::load_all(".")
devtools::load_all(".")
df <- mtcars
sch <- schema(
c(cyl, am) ~ as.character,
disp ~ as.numeric
)
expect_error(
expect_warning(check_schema(df, sch), "All predicate")
)
invalid_preds_list
devtools::load_all(".")
sch <- schema(
c(cyl, am) ~ as.character,
disp ~ as.numeric
)
expect_error(
expect_warning(check_schema(df, sch), "All predicate")
)
check_schema(df, sch)
devtools::load_all(".")
expect_error(
expect_warning(check_schema(df, sch), "All predicate")
)
sch <- schema(
c(cyl, am) ~ as.character,
disp ~ as.numeric
)
check_schema(df, sch)
devtools::load_all(".")
sch <- schema(
c(cyl, am) ~ as.character,
disp ~ as.numeric
)
check_schema(df, sch)
invalid_preds_list
devtools::load_all(".")
devtools::load_all(".")
check_schema(df, sch)
predicate_fm
invalid_preds_list
names(invalid_preds_list)
append(invalid_preds_list, character()) |>
purrr::set_names(rlang::as_label(predicate_fm))
character()
list(character())
append(list(), character())
append(list(), character())
append(invalid_preds_list, character())
append(invalid_preds_list, list(character()))
devtools::load_all(".")
check_schema(df, sch)
invalid_preds_list
devtools::load_all(".")
check_schema(df, sch)
predicate_fm
invalid_preds_list[[predicate_fm]]
.x
.x
check_schema(df, sch)
.x
predicate_fm
invalid_preds_list
devtools::load_all(".")
check_schema(df, sch)
predicate_fm
predicate_fm
invalid_preds_list
append(invalid_preds_list, list(character()))
append(
invalid_preds_list,
list(character()) |>
purrr::set_names(rlang::as_label(predicate_fm))
)
devtools::load_all(".")
check_schema(df, sch)
invalid_preds_list
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
out_inv
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
devtools::load_all(".")
check_schema(df, sch)
test_that("check_schema errors on non TRUE/FALSE check", {
df <- mtcars
sch <- schema(
c(cyl, am) ~ as.character,
disp ~ as.numeric
)
expect_error(
expect_warning(check_schema(df, sch), "All predicate")
)
})
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
devtools::load_all(".")
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
errored_preds_list
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
errored_preds_list
list(
col = character(),
msg = character()
)
list(
col = character(),
msg = character()
) |>
purrr::set_names(rlang::as_label(predicate_fm))
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
errored_preds_list
errored_preds_list
purrr::iwalk(errored_preds_list, ~{
cols_ticked <- paste0("`", .x, "`")
plural_prefix <- glue::glue(cli::pluralize("column{?s} {cols_ticked}"))
msg <- glue::glue("`{.y}` on {plural_prefix}")
out_inv <<- c(out_inv, msg)
})
out_err <- c()
purrr::iwalk(errored_preds_list, ~{
cols_ticked <- paste0("`", .x, "`")
plural_prefix <- glue::glue(cli::pluralize("column{?s} {cols_ticked}"))
msg <- glue::glue("`{.y}` on {plural_prefix}")
out_err <<- c(out_err, msg)
})
out_err
errored_preds_list
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
e
e$message
r
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
e
data
stop(data[[.x]])
devtools::load_all(".")
test_that("rules with an error are handled", {
sch <- schema(
cyl ~ stop()
)
expect_error(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
})
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
out_err
errored_preds_list
sch <- schema(
cyl ~ stop,
am ~ ~"a" + 3
)
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
out_err
out_err
glue::glue("Error in predicate{plural_pred}:\n"), paste("-", out_err)
cli::cli_warn(
glue::glue("Error in predicate{plural_pred}:\n"), paste("-", out_err)
)
devtools::load_all(".")
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
devtools::load_all(".")
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
devtools::load_all(".")
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
out_err
glue::glue("Error in predicate{plural_pred}:\n"), paste("-", out_err)
devtools::load_all(".")
devtools::load_all(".")
expect_error(
expect_warning(
check_schema(
mtcars,
sch
),
regexp = "Error in predicate"
)
)
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
.x
predicate_fm
errored_preds_list
check_schema(
mtcars,
sch
)
errored_preds_list
c(errored_preds_list[[predicate_fm]], .x)
errored_preds_list[[predicate_fm]]
errored_preds_list[[predicate_fm]] <<- c(errored_preds_list[[predicate_fm]], .x)
errored_preds_list
errored_preds_list
devtools::load_all(".")
check_schema(
mtcars,
sch
)
errored_preds_list
devtools::load_all(".")
check_schema(
mtcars,
sch
)
invalid_preds_list
devtools::load_all(".")
devtools::load_all(".")
check_schema(
mtcars,
sch
)
check_pass
invalid_preds_list
devtools::load_all(".")
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
out_err
errored_preds_list
devtools::load_all(".")
check_schema(
mtcars,
sch
)
errored_preds_list
devtools::load_all(".")
check_schema(
mtcars,
sch
)
.x
predicate_fm
errored_preds_list[[predicate_fm]]
devtools::load_all(".")
check_schema(
mtcars,
sch
)
errored_preds_list
check_schema(
mtcars,
sch
)
errored_preds_list
devtools::load_all(".")
devtools::load_all(".")
check_schema(
mtcars,
sch
)
errored_preds_list[[pred_idx]]
pred_idx
as.character(predicate_fm)
rlang::as_label(predicate_fm)
predicate_fm
rlang::as_character(predicate_fm)
devtools::load_all(".")
devtools::load_all(".")
check_schema(
mtcars,
sch
)
devtools::load_all(".")
check_schema(
mtcars,
sch
)
